ფორუმი (ვებ არქიტექტურა) - 60 ქულა
თქვენი ამოცანაა მოიფიქროთ ონლაინ ფორუმის ვებ აპლიკაციის არქიტექტურა. ვებ საიტს უნდა
ქონდეს შემდეგი ფუნქციონალი, რომელიც დაყოფილია ორ კატეგორიად: რიგითი მომხმარებლისთვის
და ადმინისტრატორისთვის.

რიგით მომხმარებელს უნდა შეეძლოს:
●	დარეგისტრირდეს საიტზე იმეილით და პაროლით. რეგისტრაციის შედეგად მომხმარებელს იმეილზე
    უნდა გაეგზავნოს უნიკალური აქტივაციის ბმული.
●	მომხმარებლის ანგარიში უნდა გააქტიურდეს მხოლოდ მას შემდეგ რაც ის მეილზე გაგზავნილ
    აქტივაციის ბმულს გახსნის.
●	მომხმარებელს უნდა შეეძლოს საიტზე გაიაროს ავტორიზაცია.
●	მხოლოდ გააქტიურებულ და ავტორიზირებულ მომხმარებელს უნდა შეეძლოს ფორუმზე ნებისმიერ
    კატეგორიაში დაპოსტვა და არსებულ პოსტზე დაკომენტარება.
●	ნებმისმიერ მომხმარებელს უნდა შეეძლოს საიტზე არსებული ყველა კატეგორიის ნახვა,
    კატეგორიაში შესვლა და მასში არსებული პოსტების დათვალიარება, და ნებისმიერ პოსტზე
    გაკეთებული კომენტარების წაკითხვა.
●	ყველა მომხმარებელს უნდა ქონდეს თავისი პროფილის გვერდი, რომელზე შესვლაც მხოლოდ
    აქტიურ მომხმარებლებს შეეძლებათ. მომხმარებლის პროფილზე უნდა გამოჩნდეს მისი კომენტარები
    და შექმნილი პოსტები, დალაგებული ქრონოლოგიურად კლებადობის მიხედვით.
●	ავტორიზირებულ მომხმარებელს უნდა შეეძლოს საიტიდან გამოსვლა.
ადმინისტრატორს უნდა შეეძლოს:
●	ყველა იმ ფუნქციონალის შესრულება რაც რიგით მომხმარებელს აქვს.
●	დაამატოს ახალი კატეგორია.
●	წაშალოს პოსტი ან პოსტზე გაკეთებული კომენტარი.
●	შეუზღუდოს რეგისტრირებულ მომხმარებელს ახალი პოსტის შექმნის ან დაკომენტარების საშუალება
    გარკვეული დროით.

იმეილის გაგზავნის სერვისის მხოლოდ ინტერფეისის მოფიქრება გევალებათ, ჩათვალეთ რომ ის
იმპლემენტირებული იქნება.

გაითვალისწინეთ რომ საიტი დაცული უნდა იყოს, მოგიწევთ განასხვავოთ ერთმანეთისგან
ადმინისტრატორი, რიგითი მომხმარებელი, რეგისტრიბეული მაგრამ არა აქტიური მომხმარებელი და
რეგისტრირებული აქტიური მომხმარებელი.
ნამუშევრის ორგანიზება:
●	db.txt - ფაილში ჩაწერეთ თუ რა ცხრილები დაგჭირდებათ ბაზაში და თითოეულ ცხრილს რა სქემა
    ექნება. გამართული SQL-ით აღწერა არ მოგეთხოვებათ, საკმარისია თითოეული ცხრილისთვის ჩამოთვალოთ ველების სახელები, ტიპები, primary და foreign გასაღებები.
●	urls.txt - ფაილში ჩაწერეთ თუ რა URL-ებს მოემსახურება თქვენი იმპლემენტაცია და ყოველ
    URL-ს მიუთითეთ თუ რომელი სერვლეტი მოემსახურება მას.
●	თითოეულ სერვლეტს მოკლედ მიუთითეთ თუ რა ფუნქციონალს უკეთებს იმპლემენტაციას და როგორ.
    როგორში იგულისხმება ბაზასთან კავშირს როგორ ამყარებს, სესიაში ინახავს თუ არა რამეს,
    თავს როგორ იცავს ანუ მომხმარებლების უფლებებს როგორ ამოწმებს. სერვლეტების აღწერები
    შეგიძლიათ იგივე urls.txt ფაილში გააკეთოთ ან შექმნათ ცალკე java ფაილები. არ
    მოგეთხოვებათ მათი სრული იმპლემენტაცია, საკმარისია მიუთითოთ სხვადასხვა HTTP ტიპის
    მოთხოვნებზე როგორ იქცევა.
●	თუ თქვენს იმპლემენტაციას ჭირდება Servlet context-ის ან სესიების გამოყენება,
    თითოეულისთვის აღწერეთ რას ინახავთ მასში და როგორ იყენებთ.


შეფასებისას ასევე ყურადღება მიექცევა ბაზასთან კავშირს რა ინტერფეისებით და მოდელის
კლასებით ააწყობთ. საკმარისია ამ კლასების ინტერფეისების ახსნა, დეტალური იმპლემენტაცია
არ არის საჭირო.
